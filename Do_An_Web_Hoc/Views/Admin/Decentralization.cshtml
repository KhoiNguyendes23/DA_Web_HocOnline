@model IEnumerable<Do_An_Web_Hoc.Models.UserAccount>

@{
    ViewData["Title"] = "Phân Quyền Người Dùng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var keyword = Context.Request.Query["keyword"].ToString()?.ToLower();
    var currentEmail = User.Identity?.Name?.ToLower();

    var allSuggestions = Model.Select(u => u.FullName)
                              .Concat(Model.Select(u => u.Email))
                              .Concat(new[] { "admin", "giảng viên", "học viên" })
                              .Distinct()
                              .ToList();
}

<link rel="stylesheet" href="~/css/Decentralization.css" />

<h2 class="text-primary mb-3">👥 Phân Quyền Người Dùng</h2>

<!-- 🔍 TÌM KIẾM -->
<form asp-action="Decentralization" method="get" class="mb-3 d-flex">
    <input type="text" name="keyword" list="keywordList" value="@keyword"
           class="form-control me-2" placeholder="Tìm theo tên, email hoặc vai trò..." />
    <datalist id="keywordList">
        @foreach (var s in allSuggestions)
        {
            <option value="@s" />
        }
    </datalist>
    <button type="submit" class="btn btn-primary">Tìm kiếm</button>
</form>
<form asp-controller="Admin" asp-action="UpdateUserRole" method="post" id="tokenForm">
    @Html.AntiForgeryToken()
</form>


<!-- 🔴 THÔNG BÁO -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger" id="errorBox">
        @TempData["Error"]
    </div>
}

<!-- 📋 BẢNG NGƯỜI DÙNG -->
<table class="table table-bordered table-hover mt-3">
    <thead class="table-dark">
        <tr>
            <th>Họ Tên</th>
            <th>Email</th>
            <th>Admin</th>
            <th>Giảng viên</th>
            <th>Học viên</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            var isAdmin = user.RoleID == 1;
            var isSelf = user.Email?.ToLower() == currentEmail;
            var rowClass = !string.IsNullOrEmpty(keyword) && (
            (!string.IsNullOrEmpty(user.FullName) && user.FullName.ToLower().Contains(keyword)) ||
            (!string.IsNullOrEmpty(user.Email) && user.Email.ToLower().Contains(keyword)) ||
            (user.RoleID == 1 && "admin".Contains(keyword)) ||
            (user.RoleID == 2 && "giảng viên".Contains(keyword)) ||
            (user.RoleID == 3 && "học viên".Contains(keyword))
            ) ? "highlight" : "";

            <tr class="@rowClass">
                <td>@user.FullName</td>
                <td>@user.Email</td>

                @for (int roleId = 1; roleId <= 3; roleId++)
                {
                    <td>
                        @if (!isAdmin && !isSelf)
                        {
                            <input type="checkbox"
                                   class="role-checkbox"
                                   data-user-id="@user.UserID"
                                   data-role-id="@roleId"
                            @(user.RoleID == roleId ? "checked" : "")
                                   onclick="handleRoleChange(this)" />

                        }
                        else
                        {
                            <input type="checkbox" disabled @(user.RoleID == roleId ? "checked" : "") />
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="~/js/decentralization.js"></script>
}
